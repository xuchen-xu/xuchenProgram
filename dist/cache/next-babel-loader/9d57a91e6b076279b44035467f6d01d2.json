{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\u6BD5\\u4E1A\\u8BBE\\u8BA1\\\\\\u5B9E\\u8DF5\\u8D44\\u6599\\\\20210201\\\\20210201\\\\code\\\\next-ts\\u6A21\\u677F\\\\my-app\\\\pages\\\\components\\\\chuanzhi.tsx\";\nvar __jsx = React.createElement;\n// import Link from 'next/link'\n// import { withRouter } from \"next/router\";\nimport React from \"react\";\nimport \"../../static/css/font-awesome.css\";\n// const IndexPage = (props: IProps) => {\n//   console.log(props.key);\n//   return (\n//     <Layout title=\"书本详情界面\">\n//     <div>书本详情页面\n//         {props.key}\n//     </div>\n//     </Layout>\n//   );\n// };\n// let IndexPage: React.FC<IProps> = (props) => {\n//   console.log(props.key);\n//   return (\n//     <div>\n//       书本详情页面\n//       {props.key}\n//     </div>\n//   );\n// };\nexport default class Child extends React.Component {\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }\n    }, this.props.params.msg);\n  }\n\n} //getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\n//当刷新页面(初次载入页面)，该方法会在服务器执行\n//当通过<Link>跳转路由的时候，该方法会在客户端执行\n// IndexPage.getInitialProps = async () => {\n//   const res = await fetch(\"http://localhost:3001/api/users\");\n//   const data = await res.json();\n//   //这边返回的数据会被挂载到组件的props中\n//   return { show: data };\n// };\n\nexport default IndexPage;","map":{"version":3,"sources":["D:/react毕业设计/实践资料/20210201/20210201/code/next-ts模板/my-app/pages/components/chuanzhi.tsx"],"names":["React","Child","Component","render","props","params","msg","IndexPage"],"mappings":";;AAAA;AAEA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,eAAe,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAmC;AAEhDC,EAAAA,MAAM,GAAE;AACN,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKC,KAAL,CAAWC,MAAX,CAAkBC,GAAxB,CAAR;AACD;;AAJ+C,C,CAOlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeC,SAAf","sourcesContent":["// import Link from 'next/link'\r\nimport Layout from \"../../components/Layout\";\r\n// import { withRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport \"@/static/css/font-awesome.css\";\r\nimport { watch } from \"fs\";\r\n// import \"./css/index.css\";\r\n// import fetch from \"isomorphic-unfetch\";\r\n// import Fromdemo from \"./components/from\"\r\n// 声明的全局数据\r\ntype IProps = {\r\n  key: string;\r\n};\r\n// const IndexPage = (props: IProps) => {\r\n//   console.log(props.key);\r\n//   return (\r\n//     <Layout title=\"书本详情界面\">\r\n//     <div>书本详情页面\r\n//         {props.key}\r\n//     </div>\r\n//     </Layout>\r\n//   );\r\n// };\r\n\r\n// let IndexPage: React.FC<IProps> = (props) => {\r\n//   console.log(props.key);\r\n//   return (\r\n//     <div>\r\n//       书本详情页面\r\n//       {props.key}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n\r\nexport default class Child extends React.Component{\r\n   \r\n  render(){\r\n    return  <div>{this.props.params.msg}</div>\r\n  }\r\n}\r\n\r\n//getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\r\n//当刷新页面(初次载入页面)，该方法会在服务器执行\r\n//当通过<Link>跳转路由的时候，该方法会在客户端执行\r\n// IndexPage.getInitialProps = async () => {\r\n//   const res = await fetch(\"http://localhost:3001/api/users\");\r\n//   const data = await res.json();\r\n//   //这边返回的数据会被挂载到组件的props中\r\n//   return { show: data };\r\n// };\r\n\r\nexport default IndexPage;\r\n"]},"metadata":{},"sourceType":"module"}