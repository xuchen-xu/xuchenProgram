{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\react\\u6BD5\\u4E1A\\u8BBE\\u8BA1\\\\\\u5B9E\\u8DF5\\u8D44\\u6599\\\\20210201\\\\20210201\\\\code\\\\next-ts\\u6A21\\u677F\\\\my-app\\\\pages\\\\home\\\\index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\n// import Link from 'next/link'\nimport Layout from \"../../components/Layout\"; // import { withRouter } from \"next/router\";\n\nimport React from \"react\";\nimport \"../../static/css/font-awesome.css\";\nimport \"../css/essay.css\";\nimport fetch from \"isomorphic-unfetch\";\nvar imgnumber = 0;\n\nvar IndexPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(IndexPage, _React$Component);\n\n  var _super = _createSuper(IndexPage);\n\n  _createClass(IndexPage, null, [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res, data;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(\"http://localhost:3001/home\");\n\n              case 2:\n                res = _context.sent;\n                _context.next = 5;\n                return res.json();\n\n              case 5:\n                data = _context.sent;\n                return _context.abrupt(\"return\", {\n                  show: data\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps() {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  function IndexPage(props) {\n    var _this;\n\n    _classCallCheck(this, IndexPage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      selected: false\n    };\n    return _this;\n  }\n\n  _createClass(IndexPage, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Layout, {\n        title: \"\\u9996\\u9875\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return IndexPage;\n}(React.Component); // IndexPage.getInitialProps = async () => {\n//   const res = await fetch(\"http://localhost:3001/api/noveltable\");\n//   const data = await res.json();\n//   //这边返回的数据会被挂载到组件的props中\n//   let novelshow;\n//   return { show: data };\n// };\n// export default withRouter(IndexPage);\n\n\nexport { IndexPage as default };","map":{"version":3,"sources":["D:/react毕业设计/实践资料/20210201/20210201/code/next-ts模板/my-app/pages/home/index.tsx"],"names":["Layout","React","fetch","imgnumber","IndexPage","res","json","data","show","props","state","selected","Component"],"mappings":";;;;;;;;;;;;;;AAAA;AACA,OAAOA,MAAP,gC,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;AACA;AAEA,OAAOC,KAAP,MAAkB,oBAAlB;AAYA,IAAIC,SAAiB,GAAG,CAAxB;;IAEqBC,S;;;;;;;;;;;;;;;uBAECF,KAAK,CAAC,4BAAD,C;;;AAAjBG,gBAAAA,G;;uBACaA,GAAG,CAACC,IAAJ,E;;;AAAbC,gBAAAA,I;iDAGC;AAAEC,kBAAAA,IAAI,EAAED;AAAR,iB;;;;;;;;;;;;;;;;;;AAGT,qBAAYE,KAAZ,EAAwB;AAAA;;AAAA;;AACtB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AAFsB;AAGvB;;;;6BAEQ;AACP,aACE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAMD;;;;EArBoCV,KAAK,CAACW,S,GAwB7C;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;SAhCqBR,S","sourcesContent":["// import Link from 'next/link'\r\nimport Layout from \"../../components/Layout\";\r\n// import { withRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport \"@/static/css/font-awesome.css\";\r\nimport \"../css/essay.css\";\r\nimport cssobj from \"../css/essay.less\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { Carousel } from \"antd\";\r\n\r\n// 声明的全局数据\r\n\r\ntype state = {\r\n  selected: boolean;\r\n};\r\n\r\ntype IProps = {\r\n  show: [{}];\r\n};\r\nvar imgnumber: number = 0;\r\n\r\nexport default class IndexPage extends React.Component<IProps, state> {\r\n  static async getInitialProps() {\r\n    const res = await fetch(\"http://localhost:3001/home\");\r\n    const data = await res.json();\r\n    // console.log(data);\r\n    //这边返回的数据会被挂载到组件的props中\r\n    return { show: data };\r\n  }\r\n\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { selected: false };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout title=\"首页\">\r\n\r\n        {/* ------------------------------------------------------------------------------------------------------- */}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\n// IndexPage.getInitialProps = async () => {\r\n//   const res = await fetch(\"http://localhost:3001/api/noveltable\");\r\n//   const data = await res.json();\r\n//   //这边返回的数据会被挂载到组件的props中\r\n//   let novelshow;\r\n//   return { show: data };\r\n// };\r\n\r\n// export default withRouter(IndexPage);\r\n"]},"metadata":{},"sourceType":"module"}