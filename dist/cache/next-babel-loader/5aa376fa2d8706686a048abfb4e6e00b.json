{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\react\\u6BD5\\u4E1A\\u8BBE\\u8BA1\\\\\\u5B9E\\u8DF5\\u8D44\\u6599\\\\20210201\\\\20210201\\\\code\\\\next-ts\\u6A21\\u677F\\\\my-app\\\\pages\\\\newbook\\\\[id].tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../../components/Layout\";\nimport { withRouter } from \"next/router\";\nimport { useRouter } from \"next/router\"; // import { Button } from 'antd';\n// import { useEffect } from 'react'\n\nvar IndexPage = function IndexPage(props) {\n  _s();\n\n  var router = useRouter();\n  console.log(router.query.id);\n  return __jsx(Layout, {\n    title: \"\\u8BE6\\u60C5\\u9875\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }\n  }, \"\\u8BE6\\u60C5\\u9875\"));\n}; // getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\n// 当刷新页面(初次载入页面)，该方法会在服务器执行\n// 当通过<Link>跳转路由的时候，该方法会在客户端执行\n// IndexPage.getInitialProps = async () => {\n//     const res = await fetch(`http://localhost:3001/essay/${router.query.id}`);\n//     const data = await res.json();\n//     //这边返回的数据会被挂载到组件的props中\n//     return { show: data }\n// }\n\n\n_s(IndexPage, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = IndexPage;\nexport default _c2 = withRouter(IndexPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IndexPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/react毕业设计/实践资料/20210201/20210201/code/next-ts模板/my-app/pages/newbook/[id].tsx"],"names":["Layout","withRouter","useRouter","IndexPage","props","router","console","log","query","id"],"mappings":";;;;;;AAAA,OAAOA,MAAP;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,SAASC,SAAT,QAA0B,aAA1B,C,CACA;AACA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAgB;AAAA;;AAC9B,MAAMC,MAAM,GAAGH,SAAS,EAAxB;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,KAAP,CAAaC,EAAzB;AACF,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADF,CADF;AAKD,CARD,C,CAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;GAlBMN,S;UACaD,S;;;KADbC,S;AAoBN,qBAAeF,UAAU,CAACE,SAAD,CAAzB","sourcesContent":["import Layout from \"../../components/Layout\";\r\nimport { withRouter } from \"next/router\";\r\nimport { useRouter } from \"next/router\";\r\n// import { Button } from 'antd';\r\n// import { useEffect } from 'react'\r\n\r\nconst IndexPage = (props: any) => {\r\n    const router = useRouter();\r\n    console.log(router.query.id)\r\n  return (\r\n    <Layout title=\"详情页\">\r\n      <div>详情页</div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\r\n// 当刷新页面(初次载入页面)，该方法会在服务器执行\r\n// 当通过<Link>跳转路由的时候，该方法会在客户端执行\r\n// IndexPage.getInitialProps = async () => {\r\n//     const res = await fetch(`http://localhost:3001/essay/${router.query.id}`);\r\n//     const data = await res.json();\r\n//     //这边返回的数据会被挂载到组件的props中\r\n//     return { show: data }\r\n// }\r\n\r\nexport default withRouter(IndexPage);\r\n"]},"metadata":{},"sourceType":"module"}