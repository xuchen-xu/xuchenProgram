{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\u6BD5\\u4E1A\\u8BBE\\u8BA1\\\\\\u5B9E\\u8DF5\\u8D44\\u6599\\\\20210201\\\\20210201\\\\code\\\\next-ts\\u6A21\\u677F\\\\my-app\\\\pages\\\\essay\\\\index.tsx\";\nvar __jsx = React.createElement;\n// import Link from 'next/link'\nimport Layout from \"../../components/Layout\"; // import { withRouter } from \"next/router\";\n\nimport React from \"react\";\nimport \"../../static/css/font-awesome.css\";\nimport cssobj from \"../css/essay.less\";\nimport fetch from \"isomorphic-unfetch\";\nexport default class IndexPage extends React.Component {\n  static async getInitialProps() {\n    const res = await fetch(\"http://localhost:3001/api/essaytable\");\n    const show = await res.json(); //这边返回的数据会被挂载到组件的props中\n\n    return {\n      show\n    };\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selected: false\n    };\n  }\n\n  render() {\n    return __jsx(Layout, {\n      title: \"\\u9996\\u9875\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 7\n      }\n    }, __jsx(\"header\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }\n    }, __jsx(\"div\", {\n      className: cssobj.eheader,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }\n    }, __jsx(\"div\", {\n      className: cssobj.ehcenter,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      className: cssobj.sloganBox,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, \"\\u7F51\\u7F57\\u5929\\u4E0B\\u56FE\\u4E66\"), __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, \"\\u4F20\\u627F\"))))));\n  }\n\n} // const IndexPage = (props: any) => {\n//   let [state, setState] = useState(false);\n//  let handleClick = (e:any) => {\n// }\n//   // console.log(props);\n//   return (\n//\n//   );\n// };\n//getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\n//当刷新页面(初次载入页面)，该方法会在服务器执行\n//当通过<Link>跳转路由的时候，该方法会在客户端执行\n// IndexPage.getInitialProps = async () => {\n//   const res = await fetch(\"http://localhost:3001/api/essaytable\");\n//   const data = await res.json();\n//   //这边返回的数据会被挂载到组件的props中\n//   return { show: data };\n// };\n// http://localhost:3001/api/noveltable\n// IndexPage.getInitialProps = async () => {\n//   const res = await fetch(\"http://localhost:3001/api/noveltable\");\n//   const data = await res.json();\n//   //这边返回的数据会被挂载到组件的props中\n//   let novelshow;\n//   return { show: data };\n// };\n// export default withRouter(IndexPage);","map":{"version":3,"sources":["D:/react毕业设计/实践资料/20210201/20210201/code/next-ts模板/my-app/pages/essay/index.tsx"],"names":["Layout","React","cssobj","fetch","IndexPage","Component","getInitialProps","res","show","json","constructor","props","state","selected","render","eheader","ehcenter","sloganBox"],"mappings":";;AAAA;AACA,OAAOA,MAAP,gC,CACA;;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAaA,eAAe,MAAMC,SAAN,SAAwBH,KAAK,CAACI,SAA9B,CAAuD;AACpE,eAAaC,eAAb,GAA+B;AAC7B,UAAMC,GAAG,GAAG,MAAMJ,KAAK,CAAC,sCAAD,CAAvB;AACA,UAAMK,IAAI,GAAG,MAAMD,GAAG,CAACE,IAAJ,EAAnB,CAF6B,CAG7B;;AACA,WAAO;AAAED,MAAAA;AAAF,KAAP;AACD;;AACDE,EAAAA,WAAW,CAACC,KAAD,EAAa;AACtB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAb;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEZ,MAAM,CAACa,OAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAEb,MAAM,CAACc,QAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACe,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,CADJ,CADF,CADF,CADF,CADF;AAcD;;AA3BmE,C,CA6BtE;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["// import Link from 'next/link'\r\nimport Layout from \"../../components/Layout\";\r\n// import { withRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport \"@/static/css/font-awesome.css\";\r\nimport cssobj from \"../css/essay.less\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport { Carousel } from \"antd\";\r\n\r\n// 声明的全局数据\r\n\r\ntype state = {\r\n  selected: boolean;\r\n};\r\n\r\ntype IProps = {\r\n  show: [{}];\r\n};\r\n\r\nexport default class IndexPage extends React.Component<IProps, state> {\r\n  static async getInitialProps() {\r\n    const res = await fetch(\"http://localhost:3001/api/essaytable\");\r\n    const show = await res.json();\r\n    //这边返回的数据会被挂载到组件的props中\r\n    return { show };\r\n  }\r\n  constructor(props: any) {\r\n    super(props);\r\n    this.state = { selected: false };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout title=\"首页\">\r\n        <header>\r\n          <div className={cssobj.eheader}>\r\n            <div className={cssobj.ehcenter}>\r\n                <div className={cssobj.sloganBox}>\r\n                    <span>网罗天下图书</span>\r\n                    <span>传承</span>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n// const IndexPage = (props: any) => {\r\n//   let [state, setState] = useState(false);\r\n//  let handleClick = (e:any) => {\r\n\r\n// }\r\n//   // console.log(props);\r\n//   return (\r\n//\r\n\r\n//   );\r\n// };\r\n\r\n//getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\r\n//当刷新页面(初次载入页面)，该方法会在服务器执行\r\n//当通过<Link>跳转路由的时候，该方法会在客户端执行\r\n// IndexPage.getInitialProps = async () => {\r\n//   const res = await fetch(\"http://localhost:3001/api/essaytable\");\r\n//   const data = await res.json();\r\n//   //这边返回的数据会被挂载到组件的props中\r\n//   return { show: data };\r\n// };\r\n\r\n// http://localhost:3001/api/noveltable\r\n\r\n// IndexPage.getInitialProps = async () => {\r\n//   const res = await fetch(\"http://localhost:3001/api/noveltable\");\r\n//   const data = await res.json();\r\n//   //这边返回的数据会被挂载到组件的props中\r\n//   let novelshow;\r\n//   return { show: data };\r\n// };\r\n\r\n// export default withRouter(IndexPage);\r\n"]},"metadata":{},"sourceType":"module"}