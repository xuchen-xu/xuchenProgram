{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\react\\u6BD5\\u4E1A\\u8BBE\\u8BA1\\\\\\u5B9E\\u8DF5\\u8D44\\u6599\\\\20210201\\\\20210201\\\\code\\\\next-ts\\u6A21\\u677F\\\\my-app\\\\pages\\\\novel\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Layout from \"../../components/Layout\";\nimport { withRouter } from \"next/router\";\nimport React, { useState, useRef } from \"react\";\nimport \"../../static/css/font-awesome.css\";\nimport \"../\";\nimport fetch from \"isomorphic-unfetch\";\n// 声明的全局数据\nvar imgnumber = 0;\nvar test = {\n  key: \"111\"\n};\n\nvar IndexPage = function IndexPage(props) {\n  _s();\n\n  //引用页面元素\n  var inputRef = useRef(null);\n\n  var _useState = useState(\"\"),\n      user = _useState[0],\n      setuser = _useState[1];\n\n  var handleSubmit = function handleSubmit() {\n    console.log(inputRef.current && inputRef.current.value);\n\n    if (inputRef.current) {// setuser(inputRef.current.value)\n    }\n  };\n\n  return __jsx(Layout, {\n    title: \"\\u5206\\u7C7B\\uFF1A\\u5C0F\\u8BF4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n}; // getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\n// 当刷新页面(初次载入页面)，该方法会在服务器执行\n// 当通过<Link>跳转路由的时候，该方法会在客户端执行\n\n\n_s(IndexPage, \"SBnD8EJ8hwafufEhHYv4MJFRhtE=\");\n\n_c = IndexPage;\nIndexPage.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"http://localhost:3001/novel\");\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            show: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default _c2 = withRouter(IndexPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IndexPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/react毕业设计/实践资料/20210201/20210201/code/next-ts模板/my-app/pages/novel/index.tsx"],"names":["Layout","withRouter","React","useState","useRef","fetch","imgnumber","test","key","IndexPage","props","inputRef","user","setuser","handleSubmit","console","log","current","value","getInitialProps","res","json","data","show"],"mappings":";;;;;;;;AACA,OAAOA,MAAP;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,OAAxC;AACA;AACA;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AAGA;AACA,IAAIC,SAAS,GAAG,CAAhB;AACA,IAAIC,IAAI,GAAG;AACTC,EAAAA,GAAG,EAAE;AADI,CAAX;;AAGA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAgB;AAAA;;AAChC;AACA,MAAMC,QAAQ,GAAGP,MAAM,CAAmB,IAAnB,CAAvB;;AAFgC,kBAGVD,QAAQ,CAAC,EAAD,CAHE;AAAA,MAG3BS,IAH2B;AAAA,MAGrBC,OAHqB;;AAIhC,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYL,QAAQ,CAACM,OAAT,IAAoBN,QAAQ,CAACM,OAAT,CAAiBC,KAAjD;;AACA,QAAIP,QAAQ,CAACM,OAAb,EAAsB,CACpB;AACD;AACF,GALD;;AASA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,gCAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CAlBD,C,CAoBA;AACA;AACA;;;GAtBMR,S;;KAAAA,S;AAuBNA,SAAS,CAACU,eAAV,yEAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACRd,KAAK,CAAC,6BAAD,CADG;;AAAA;AACpBe,UAAAA,GADoB;AAAA;AAAA,iBAEPA,GAAG,CAACC,IAAJ,EAFO;;AAAA;AAEpBC,UAAAA,IAFoB;AAAA,2CAInB;AAAEC,YAAAA,IAAI,EAAED;AAAR,WAJmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAOA,qBAAerB,UAAU,CAACQ,SAAD,CAAzB","sourcesContent":["import Link from \"next/link\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { withRouter } from \"next/router\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport \"@/static/css/font-awesome.css\";\r\nimport \"../\"\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport Chuanzhi from \"../components/footerbook\";\r\n\r\n// 声明的全局数据\r\nlet imgnumber = 0;\r\nlet test = {\r\n  key: \"111\",\r\n};\r\nconst IndexPage = (props: any) => {\r\n  //引用页面元素\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  let [user, setuser] = useState(\"\");\r\n  const handleSubmit = () => {\r\n    console.log(inputRef.current && inputRef.current.value);\r\n    if (inputRef.current) {\r\n      // setuser(inputRef.current.value)\r\n    }\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Layout title=\"分类：小说\">\r\n      <div className=\"\"></div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\r\n// 当刷新页面(初次载入页面)，该方法会在服务器执行\r\n// 当通过<Link>跳转路由的时候，该方法会在客户端执行\r\nIndexPage.getInitialProps = async () => {\r\n  const res = await fetch(\"http://localhost:3001/novel\");\r\n  const data = await res.json();\r\n  //这边返回的数据会被挂载到组件的props中\r\n  return { show: data };\r\n};\r\n\r\nexport default withRouter(IndexPage);\r\n"]},"metadata":{},"sourceType":"module"}