{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\react\\u6BD5\\u4E1A\\u8BBE\\u8BA1\\\\\\u5B9E\\u8DF5\\u8D44\\u6599\\\\20210201\\\\20210201\\\\code\\\\next-ts\\u6A21\\u677F\\\\my-app\\\\pages\\\\index.tsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import Link from 'next/link'\nimport Layout from \"../components/Layout\";\nimport { withRouter } from \"next/router\";\n// import { Button } from 'antd';\n//开启css模块化之后可以这样使用样式\n// import cssobj from './index.less'\nimport \"./css/index.css\";\nimport \"../static/css/font-awesome.css\";\n\nvar IndexPage = function IndexPage(props) {\n  console.log(props);\n  return __jsx(Layout, {\n    title: \"\\u9996\\u9875\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"nov-fir clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"code\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"dbg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"nov-primary clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 11\n    }\n  }, \"\\u8C46\\u74E3\\u8BFB\\u4E66\"), __jsx(\"div\", {\n    className: \"nov-sec\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"novel\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: \"novelInit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 15\n    }\n  }, \"\\u5C0F\\u8BF4\")), __jsx(\"div\", {\n    className: \"essay\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: \"essayInit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 15\n    }\n  }, \"\\u6563\\u6587\")), __jsx(\"div\", {\n    className: \"poetry\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: \"proseInit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 15\n    }\n  }, \"\\u968F\\u7B14\")), __jsx(\"div\", {\n    className: \"work\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: \"literatureInit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 15\n    }\n  }, \"\\u6587\\u5B66\")))), __jsx(\"div\", {\n    className: \"nov-thi clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"../static/images/image/2.jpg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"nov-for clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, \"\\u65B0\\u4E66\\u901F\\u9012\"), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"\\u66F4\\u591A\\xBB\"))));\n}; //getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\n//当刷新页面(初次载入页面)，该方法会在服务器执行\n//当通过<Link>跳转路由的时候，该方法会在客户端执行\n\n\n_c = IndexPage;\nIndexPage.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"https://api.tvmaze.com/search/shows?q=marvel\");\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            show: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default _c2 = withRouter(IndexPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IndexPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/react毕业设计/实践资料/20210201/20210201/code/next-ts模板/my-app/pages/index.tsx"],"names":["Layout","withRouter","IndexPage","props","console","log","getInitialProps","fetch","res","json","data","show"],"mappings":";;;;;;;;AAAA;AACA,OAAOA,MAAP;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA;AACA;AACA;AACA;AAEA;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,KAAD,EAAgB;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAJF,EAOE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAPF,EAUE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CAVF,CAFF,CAJF,EAsBE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAC,8BAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBF,EAyBE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFF,CAzBF,CADF,CADF;AA2CD,CA9CD,C,CAgDA;AACA;AACA;;;KAlDMD,S;AAmDNA,SAAS,CAACI,eAAV,yEAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACRC,KAAK,CAAC,8CAAD,CADG;;AAAA;AACpBC,UAAAA,GADoB;AAAA;AAAA,iBAEPA,GAAG,CAACC,IAAJ,EAFO;;AAAA;AAEpBC,UAAAA,IAFoB;AAAA,2CAInB;AAAEC,YAAAA,IAAI,EAAED;AAAR,WAJmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAA5B;AAOA,qBAAeT,UAAU,CAACC,SAAD,CAAzB","sourcesContent":["// import Link from 'next/link'\nimport Layout from \"../components/Layout\";\nimport { withRouter } from \"next/router\";\nimport { useEffect } from \"react\";\n// import { Button } from 'antd';\n//开启css模块化之后可以这样使用样式\n// import cssobj from './index.less'\nimport \"./css/index.css\";\n\nimport \"@/static/css/font-awesome.css\";\n\nconst IndexPage = (props: any) => {\n  console.log(props);\n\n  return (\n    <Layout title=\"首页\">\n      <div className=\"container clear\">\n        <div className=\"nov-fir clear\">\n          <div className=\"code\"></div>\n        </div>\n        <div className=\"dbg\">\n          <div className=\"nov-primary clear\">豆瓣读书</div>\n          <div className=\"nov-sec\">\n            <div className=\"novel\">\n              <a href=\"novelInit\">小说</a>\n            </div>\n            <div className=\"essay\">\n              <a href=\"essayInit\">散文</a>\n            </div>\n            <div className=\"poetry\">\n              <a href=\"proseInit\">随笔</a>\n            </div>\n            <div className=\"work\">\n              <a href=\"literatureInit\">文学</a>\n            </div>\n          </div>\n        </div>\n{/* ----------------------------------------------- */}\n        <div className=\"nov-thi clear\">\n          <img src=\"../static/images/image/2.jpg\"></img>\n        </div>\n        <div className=\"nov-for clear\">\n          <div>新书速递</div>\n          <div>更多»</div>\n        </div>\n  {/* ----------------------------------------------- */}\n        \n\n\n\n\n        \n\n\n      </div>\n    </Layout>\n  );\n};\n\n//getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\n//当刷新页面(初次载入页面)，该方法会在服务器执行\n//当通过<Link>跳转路由的时候，该方法会在客户端执行\nIndexPage.getInitialProps = async () => {\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=marvel\");\n  const data = await res.json();\n  //这边返回的数据会被挂载到组件的props中\n  return { show: data };\n};\n\nexport default withRouter(IndexPage);\n"]},"metadata":{},"sourceType":"module"}