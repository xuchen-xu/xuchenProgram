{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\u6BD5\\u4E1A\\u8BBE\\u8BA1\\\\\\u5B9E\\u8DF5\\u8D44\\u6599\\\\20210201\\\\20210201\\\\code\\\\next-ts\\u6A21\\u677F\\\\my-app\\\\pages\\\\components\\\\Slide.tsx\";\nvar __jsx = React.createElement;\nimport React from \"react\";\n\nclass Slide extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      slideUrl: [],\n      index: 0,\n      liWidth: document.body.clientWidth,\n      posLeft: 0\n    };\n  }\n  /*\r\n  重置图片宽度\r\n  */\n\n\n  onWindowResize() {\n    let liWidth2 = document.body.clientWidth;\n    this.setState({\n      liWidth: liWidth2\n    });\n  }\n\n  componentDidMount() {\n    this.setState({\n      slideUrl: [{\n        'imageUrl': img1\n      }, {\n        'imageUrl': img2\n      }, {\n        'imageUrl': img3\n      }, {\n        'imageUrl': img4\n      }, {\n        'imageUrl': img5\n      }],\n      index: 0\n    });\n    window.addEventListener('resize', this.onWindowResize.bind(this));\n    this.tick();\n  }\n  /**\r\n  * 组件即将卸载时调用。一般在componentDidMount注册的监听事件需要在该方法中注销删除，以免不必要的错误.\r\n  * @return void\r\n  */\n\n\n  componentWillUnmount() {\n    //在组件即将销毁的时候取消resize的监听\n    window.removeEventListener('resize', this.onWindowResize.bind(this));\n    this._isMounted = false;\n    clearInterval(this.play);\n  }\n  /*轮播的功能*/\n\n\n  turn(direction) {\n    var index = this.state.index;\n    this._isMounted = true;\n\n    if (direction === 'left') {\n      index++;\n      index = index >= this.state.slideUrl.length ? 0 : index;\n    } else if (direction === 'right') {\n      index--;\n      index = index < 0 ? this.state.slideUrl.length - 1 : index;\n    }\n\n    if (this._isMounted) {\n      this.setState({\n        posLeft: -this.state.liWidth * index,\n        index: index\n      }, () => {\n        this.state.index = index;\n      });\n    }\n  }\n  /*定时器*/\n\n\n  tick() {\n    this.play = setInterval(() => {\n      this.turn('left');\n    }, 1000);\n  }\n\n  over() {\n    clearInterval(this.play);\n  }\n\n  render() {\n    const bannerList = this.state.slideUrl;\n    let arr = [];\n\n    for (let i = 0; i < bannerList.length; i++) {\n      arr[i] = __jsx(\"span\", {\n        className: this.state.index === i ? 'circle active' : 'circle',\n        key: i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 22\n        }\n      });\n    }\n\n    return __jsx(\"div\", {\n      className: \"banner\",\n      style: {\n        width: this.state.liWidth\n      },\n      onMouseOver: this.over.bind(this),\n      onMouseOut: this.tick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, __jsx(\"ul\", {\n      className: \"bannerUl\",\n      style: {\n        'left': this.state.posLeft,\n        width: this.state.liWidth * this.state.slideUrl.length,\n        Transition: 'all 0.4s',\n        WebkitTransition: 'all 0.4s',\n        // note the capital 'W' here\n        msTransition: 'all 0.4s' // 'ms' is the only lowercase vendor prefix\n\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 16\n      }\n    }, bannerList.map((value, key) => {\n      return __jsx(\"li\", {\n        key: key,\n        style: {\n          width: this.state.liWidth\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }\n      }, __jsx(\"img\", {\n        src: value.imageUrl,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 24\n        }\n      }));\n    })), __jsx(\"div\", {\n      className: \"ban_btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 16\n      }\n    }, __jsx(\"span\", {\n      onClick: this.turn.bind(this, 'left'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, \"\\u5DE6\"), __jsx(\"span\", {\n      onClick: this.turn.bind(this, 'right'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, \"\\u53F3\")), __jsx(\"div\", {\n      className: \"circles\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 16\n      }\n    }, arr));\n  }\n\n}\n\nexport default Slide;","map":{"version":3,"sources":["D:/react毕业设计/实践资料/20210201/20210201/code/next-ts模板/my-app/pages/components/Slide.tsx"],"names":["React","Slide","Component","constructor","args","state","slideUrl","index","liWidth","document","body","clientWidth","posLeft","onWindowResize","liWidth2","setState","componentDidMount","img1","img2","img3","img4","img5","window","addEventListener","bind","tick","componentWillUnmount","removeEventListener","_isMounted","clearInterval","play","turn","direction","length","setInterval","over","render","bannerList","arr","i","width","Transition","WebkitTransition","msTransition","map","value","key","imageUrl"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n\r\nclass Slide extends React.Component {\r\n    constructor(...args) {\r\n        super(...args)\r\n        this.state = {\r\n            slideUrl: [],\r\n            index: 0,\r\n            liWidth: document.body.clientWidth,\r\n            posLeft: 0\r\n        }\r\n    }\r\n /*\r\n重置图片宽度\r\n*/\r\n    onWindowResize() {\r\n        let liWidth2 = document.body.clientWidth;\r\n        this.setState({\r\n            liWidth: liWidth2\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        this.setState({\r\n            slideUrl: [\r\n                {\r\n                    'imageUrl': img1\r\n                },\r\n                {\r\n                    'imageUrl': img2\r\n                },\r\n                {\r\n                    'imageUrl': img3\r\n                }\r\n                , {\r\n                    'imageUrl': img4\r\n                },\r\n                {\r\n                    'imageUrl': img5\r\n                }\r\n            ],\r\n            index: 0,\r\n        })\r\n        window.addEventListener('resize', this.onWindowResize.bind(this));\r\n        this.tick();\r\n    }\r\n    /**\r\n    * 组件即将卸载时调用。一般在componentDidMount注册的监听事件需要在该方法中注销删除，以免不必要的错误.\r\n    * @return void\r\n    */\r\n    componentWillUnmount() {\r\n        //在组件即将销毁的时候取消resize的监听\r\n        window.removeEventListener('resize', this.onWindowResize.bind(this));\r\n        this._isMounted = false;\r\n        clearInterval(this.play)\r\n\r\n    }\r\n/*轮播的功能*/\r\n    turn(direction) {\r\n        var index = this.state.index;\r\n        this._isMounted = true;\r\n        if (direction === 'left') {\r\n            index++\r\n            index = index >= this.state.slideUrl.length ? 0 : index;\r\n        } else if (direction === 'right') {\r\n            index--\r\n            index = index < 0 ? this.state.slideUrl.length - 1 : index;\r\n        }\r\n        if (this._isMounted) {\r\n            this.setState({\r\n                posLeft: -this.state.liWidth * (index),\r\n                index: index\r\n            }, () => {\r\n                this.state.index = index\r\n            })\r\n        }\r\n    }\r\n/*定时器*/\r\n    tick() {\r\n        this.play = setInterval(() => {\r\n            this.turn('left');\r\n        }, 1000)\r\n    }\r\n    over() {\r\n        clearInterval(this.play)\r\n    }\r\n    render() {\r\n        const bannerList = this.state.slideUrl;\r\n        let arr = [];\r\n        for (let i = 0; i < bannerList.length; i++) {\r\n            arr[i] = <span className= {this.state.index === i ? 'circle active' : 'circle'} key={i}></span>\r\n        }\r\n       \r\n        return (<div className=\"banner\"\r\n            style={{\r\n                width: this.state.liWidth\r\n            }}\r\n            onMouseOver={this.over.bind(this)}\r\n            onMouseOut={this.tick.bind(this)}\r\n            >\r\n               <ul className='bannerUl' style={{\r\n                'left': this.state.posLeft,\r\n                width: this.state.liWidth * this.state.slideUrl.length,\r\n                Transition: 'all 0.4s',\r\n                WebkitTransition: 'all 0.4s', // note the capital 'W' here\r\n                msTransition: 'all 0.4s' // 'ms' is the only lowercase vendor prefix\r\n            }}>\r\n                  {\r\n            bannerList.map((value, key) => {\r\n                return (<li key={key} style={{\r\n                        width: this.state.liWidth\r\n                    }}><img src={value.imageUrl}/></li>)\r\n            })\r\n            }\r\n               </ul>\r\n               <div  className=\"ban_btn\">\r\n                    <span onClick={this.turn.bind(this, 'left')}>左</span>\r\n                    <span onClick={this.turn.bind(this, 'right')}>右</span>\r\n               </div>\r\n               <div className='circles'>\r\n               {arr }\r\n            </div>\r\n           </div>\r\n        )\r\n    }\r\n}\r\nexport default Slide;"]},"metadata":{},"sourceType":"module"}