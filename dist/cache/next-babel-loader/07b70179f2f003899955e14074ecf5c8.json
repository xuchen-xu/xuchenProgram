{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\react\\u6BD5\\u4E1A\\u8BBE\\u8BA1\\\\\\u5B9E\\u8DF5\\u8D44\\u6599\\\\20210201\\\\20210201\\\\code\\\\next-ts\\u6A21\\u677F\\\\my-app\\\\pages\\\\novel\\\\index.tsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport Layout from \"../../components/Layout\";\nimport { withRouter } from \"next/router\";\nimport React, { useState, useRef } from \"react\";\nimport \"../../static/css/font-awesome.css\";\nimport \"../css/novel.css\";\nimport fetch from \"isomorphic-unfetch\";\n// 声明的全局数据\nvar imgnumber = 0;\nvar test = {\n  key: \"111\"\n};\n\nvar IndexPage = function IndexPage(props) {\n  _s();\n\n  //引用页面元素\n  var inputRef = useRef(null);\n\n  var _useState = useState(\"\"),\n      user = _useState[0],\n      setuser = _useState[1];\n\n  var handleSubmit = function handleSubmit() {\n    console.log(inputRef.current && inputRef.current.value);\n\n    if (inputRef.current) {// setuser(inputRef.current.value)\n    }\n  };\n\n  return __jsx(Layout, {\n    title: \"\\u5206\\u7C7B\\uFF1A\\u5C0F\\u8BF4\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"continer clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"title clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"dibubox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"formbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"noveltext\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 15\n    }\n  }, \"\\u5C0F \\u8BF4 \\u5206 \\u7C7B\")))), __jsx(\"div\", {\n    className: \"classification\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"box-fenglei\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"two clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, __jsx(\"div\", {\n    className: \"special clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"\\u5C0F\\u8BF4\"), __jsx(\"div\", {\n    className: \"box clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 15\n    }\n  }, \"\\u6563\\u6587\"), __jsx(\"div\", {\n    className: \"box clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 15\n    }\n  }, \"\\u968F\\u7B14\"), __jsx(\"div\", {\n    className: \"box clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, \"\\u6587\\u5B66\")))), __jsx(\"div\", {\n    className: \"photo clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"../../static/images/image/novelfirst.jpg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"books clear\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, props.show.map(function (item) {\n    imgnumber++;\n\n    if (imgnumber < 22) {\n      return __jsx(\"div\", {\n        key: item.bookId,\n        className: \"book clear\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        style: {\n          alignContent: \"center\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }\n      }, __jsx(\"img\", {\n        src: \"../static/images/image/\".concat(item.imgPath),\n        width: \"115\",\n        height: \"172\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }\n      })), __jsx(\"div\", {\n        className: \"text1\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 19\n        }\n      }, item.bookName), __jsx(\"div\", {\n        className: \"text2\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 19\n        }\n      }, \"\\u4F5C\\u8005:\", item.author));\n    }\n  }))));\n}; // getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\n// 当刷新页面(初次载入页面)，该方法会在服务器执行\n// 当通过<Link>跳转路由的时候，该方法会在客户端执行\n\n\n_s(IndexPage, \"SBnD8EJ8hwafufEhHYv4MJFRhtE=\");\n\n_c = IndexPage;\nIndexPage.getInitialProps = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n  var res, data;\n  return _regeneratorRuntime.wrap(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return fetch(\"http://localhost:3001/novel\");\n\n        case 2:\n          res = _context.sent;\n          _context.next = 5;\n          return res.json();\n\n        case 5:\n          data = _context.sent;\n          return _context.abrupt(\"return\", {\n            show: data\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _callee);\n}));\nexport default _c2 = withRouter(IndexPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"IndexPage\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["D:/react毕业设计/实践资料/20210201/20210201/code/next-ts模板/my-app/pages/novel/index.tsx"],"names":["Layout","withRouter","React","useState","useRef","fetch","imgnumber","test","key","IndexPage","props","inputRef","user","setuser","handleSubmit","console","log","current","value","show","map","item","bookId","alignContent","imgPath","bookName","author","getInitialProps","res","json","data"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { withRouter } from \"next/router\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport \"@/static/css/font-awesome.css\";\r\nimport \"../css/novel.css\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport Chuanzhi from \"../components/chuanzhi\";\r\n\r\n// 声明的全局数据\r\nlet imgnumber = 0;\r\nlet test = {\r\n  key: \"111\",\r\n};\r\nconst IndexPage = (props: any) => {\r\n  //引用页面元素\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  let [user, setuser] = useState(\"\");\r\n  const handleSubmit = () => {\r\n    console.log(inputRef.current && inputRef.current.value);\r\n    if (inputRef.current) {\r\n      // setuser(inputRef.current.value)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout title=\"分类：小说\">\r\n      <div className=\"continer clear\">\r\n        <div className=\"title clear\">\r\n          <div className=\"dibubox\">\r\n            <div className=\"formbox\">\r\n              <div className=\"noveltext\">小 说 分 类</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* --------------------------------------------------------------------- */}\r\n        <div className=\"classification\">\r\n          <div className=\"box-fenglei\">\r\n            <div className=\"two clear\">\r\n              <div className=\"special clear\">小说</div>\r\n              <div className=\"box clear\">散文</div>\r\n              <div className=\"box clear\">随笔</div>\r\n              <div className=\"box clear\">文学</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"photo clear\">\r\n          <img src=\"../../static/images/image/novelfirst.jpg\" />\r\n        </div>\r\n        <div className=\"books clear\">\r\n          {props.show.map((item: any) => {\r\n            imgnumber++;\r\n            if (imgnumber < 22) {\r\n              return (\r\n                <div key={item.bookId} className=\"book clear\">\r\n                  <div style={{ alignContent: \"center\" }}>\r\n                    <img\r\n                      src={`../static/images/image/${item.imgPath}`}\r\n                      width=\"115\"\r\n                      height=\"172\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"text1\">{item.bookName}</div>\r\n                  <div className=\"text2\">作者:{item.author}</div>\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n        {/* <Chuanzhi {...test}/> */}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\r\n// 当刷新页面(初次载入页面)，该方法会在服务器执行\r\n// 当通过<Link>跳转路由的时候，该方法会在客户端执行\r\nIndexPage.getInitialProps = async () => {\r\n  const res = await fetch(\"http://localhost:3001/novel\");\r\n  const data = await res.json();\r\n  //这边返回的数据会被挂载到组件的props中\r\n  return { show: data };\r\n};\r\n\r\nexport default withRouter(IndexPage);\r\n"]},"metadata":{},"sourceType":"module"}