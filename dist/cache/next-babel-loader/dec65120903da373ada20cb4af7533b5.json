{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\u6BD5\\u4E1A\\u8BBE\\u8BA1\\\\\\u5B9E\\u8DF5\\u8D44\\u6599\\\\20210201\\\\20210201\\\\code\\\\next-ts\\u6A21\\u677F\\\\my-app\\\\pages\\\\newbook\\\\[id].tsx\";\nvar __jsx = React.createElement;\nimport { withRouter } from \"next/router\";\nimport React from \"react\"; // import { Button } from 'antd';\n// import { useEffect } from 'react'\n// const IndexPage = (props: any) => {\n//     const router = useRouter();\n//     console.log(router.query.id)\n//   return (\n//     <Layout title=\"详情页\">\n//       <div>详情页</div>\n//     </Layout>\n//   );\n// };\n\nclass IndexPage extends React.Component {\n  // constructor(props: any) {\n  //     super(props);\n  //     this.state = { selected: false };\n  //   }\n  static async getInitialProps() {\n    const res = await fetch(`http://localhost:3001/essay/${router.query.id}`);\n    const show = await res.json(); //这边返回的数据会被挂载到组件的props中\n\n    return {\n      show\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }\n    });\n  }\n\n} // getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\n// 当刷新页面(初次载入页面)，该方法会在服务器执行\n// 当通过<Link>跳转路由的时候，该方法会在客户端执行\n// IndexPage.getInitialProps = async () => {\n//     const res = await fetch(`http://localhost:3001/essay/${router.query.id}`);\n//     const data = await res.json();\n//     //这边返回的数据会被挂载到组件的props中\n//     return { show: data }\n// }\n\n\nexport default withRouter(IndexPage);","map":{"version":3,"sources":["D:/react毕业设计/实践资料/20210201/20210201/code/next-ts模板/my-app/pages/newbook/[id].tsx"],"names":["withRouter","React","IndexPage","Component","getInitialProps","res","fetch","router","query","id","show","json","render"],"mappings":";;AACA,SAASA,UAAT,QAA2B,aAA3B;AAEA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAMC,SAAN,SAAwBD,KAAK,CAACE,SAA9B,CAAwC;AACtC;AACA;AACA;AACA;AAEA,eAAaC,eAAb,GAA+B;AAC7B,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,+BAA8BC,MAAM,CAACC,KAAP,CAAaC,EAAG,EAAhD,CAAvB;AACA,UAAMC,IAAI,GAAG,MAAML,GAAG,CAACM,IAAJ,EAAnB,CAF6B,CAG7B;;AACA,WAAO;AAAED,MAAAA;AAAF,KAAP;AACD;;AACDE,EAAAA,MAAM,GAAG;AACP,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AAdqC,C,CAgBxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeZ,UAAU,CAACE,SAAD,CAAzB","sourcesContent":["import Layout from \"../../components/Layout\";\r\nimport { withRouter } from \"next/router\";\r\nimport { useRouter } from \"next/router\";\r\nimport React from \"react\";\r\n// import { Button } from 'antd';\r\n// import { useEffect } from 'react'\r\n\r\n// const IndexPage = (props: any) => {\r\n//     const router = useRouter();\r\n//     console.log(router.query.id)\r\n//   return (\r\n//     <Layout title=\"详情页\">\r\n//       <div>详情页</div>\r\n//     </Layout>\r\n//   );\r\n// };\r\nclass IndexPage extends React.Component {\r\n  // constructor(props: any) {\r\n  //     super(props);\r\n  //     this.state = { selected: false };\r\n  //   }\r\n \r\n  static async getInitialProps() {\r\n    const res = await fetch(`http://localhost:3001/essay/${router.query.id}`);\r\n    const show = await res.json();\r\n    //这边返回的数据会被挂载到组件的props中\r\n    return { show };\r\n  }\r\n  render() {\r\n    return <div></div>;\r\n  }\r\n}\r\n// getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\r\n// 当刷新页面(初次载入页面)，该方法会在服务器执行\r\n// 当通过<Link>跳转路由的时候，该方法会在客户端执行\r\n// IndexPage.getInitialProps = async () => {\r\n//     const res = await fetch(`http://localhost:3001/essay/${router.query.id}`);\r\n//     const data = await res.json();\r\n//     //这边返回的数据会被挂载到组件的props中\r\n//     return { show: data }\r\n// }\r\n\r\nexport default withRouter(IndexPage);\r\n"]},"metadata":{},"sourceType":"module"}