{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\u6BD5\\u4E1A\\u8BBE\\u8BA1\\\\\\u5B9E\\u8DF5\\u8D44\\u6599\\\\20210201\\\\20210201\\\\code\\\\next-ts\\u6A21\\u677F\\\\my-app\\\\pages\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n// import Link from 'next/link'\nimport Layout from \"../components/Layout\";\nimport { withRouter } from \"next/router\";\n// import { Button } from 'antd';\n//开启css模块化之后可以这样使用样式\n// import cssobj from './index.less'\nimport \"../static/css/font-awesome.css\";\n\nconst IndexPage = props => {\n  console.log(props);\n  return __jsx(Layout, {\n    title: \"\\u9996\\u9875\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"container clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    class: \"nov-fir clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    class: \"code\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  })), __jsx(\"div\", {\n    class: \"dbg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    class: \"nov-primary clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, \"\\u8C46\\u74E3\\u8BFB\\u4E66\"), __jsx(\"div\", {\n    class: \"nov-sec\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    class: \"novel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: \"novelInit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 32\n    }\n  }, \"\\u5C0F\\u8BF4\")), __jsx(\"div\", {\n    class: \"essay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: \"essayInit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 32\n    }\n  }, \"\\u6563\\u6587\")), __jsx(\"div\", {\n    class: \"poetry\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: \"proseInit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 33\n    }\n  }, \"\\u968F\\u7B14\")), __jsx(\"div\", {\n    class: \"work\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    href: \"literatureInit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 31\n    }\n  }, \"\\u6587\\u5B66\"))))));\n}; //getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\n//当刷新页面(初次载入页面)，该方法会在服务器执行\n//当通过<Link>跳转路由的时候，该方法会在客户端执行\n\n\nIndexPage.getInitialProps = async () => {\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=marvel\");\n  const data = await res.json(); //这边返回的数据会被挂载到组件的props中\n\n  return {\n    show: data\n  };\n};\n\nexport default withRouter(IndexPage);","map":{"version":3,"sources":["D:/react毕业设计/实践资料/20210201/20210201/code/next-ts模板/my-app/pages/index.tsx"],"names":["Layout","withRouter","IndexPage","props","console","log","getInitialProps","res","fetch","data","json","show"],"mappings":";;;AAAA;AACA,OAAOA,MAAP;AACA,SAASC,UAAT,QAA2B,aAA3B;AAEA;AACA;AACA;AAEA;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAgB;AAChCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AAEA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,KAAK,EAAC,eAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADA,EAIF;AAAK,IAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAC,mBAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ,EAEI;AAAK,IAAA,KAAK,EAAC,SAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmB;AAAG,IAAA,IAAI,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAnB,CADJ,EAEI;AAAK,IAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmB;AAAG,IAAA,IAAI,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAnB,CAFJ,EAGI;AAAK,IAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoB;AAAG,IAAA,IAAI,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAApB,CAHJ,EAII;AAAK,IAAA,KAAK,EAAC,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkB;AAAG,IAAA,IAAI,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAlB,CAJJ,CAFJ,CAJE,CADF,CADF;AAkBD,CArBD,C,CAuBA;AACA;AACA;;;AACAD,SAAS,CAACI,eAAV,GAA4B,YAAY;AACtC,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,8CAAD,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB,CAFsC,CAGtC;;AACA,SAAO;AAAEC,IAAAA,IAAI,EAAEF;AAAR,GAAP;AACD,CALD;;AAOA,eAAeR,UAAU,CAACC,SAAD,CAAzB","sourcesContent":["// import Link from 'next/link'\nimport Layout from \"../components/Layout\";\nimport { withRouter } from \"next/router\";\nimport { useEffect } from \"react\";\n// import { Button } from 'antd';\n//开启css模块化之后可以这样使用样式\n// import cssobj from './index.less'\n\nimport \"@/static/css/font-awesome.css\";\n\nconst IndexPage = (props: any) => {\n  console.log(props);\n\n  return (\n    <Layout title=\"首页\">\n      <div className=\"container clear\">\n      <div class=\"nov-fir clear\">\n        <div class=\"code\"></div>\n    </div>\n    <div class=\"dbg\">\n        <div class=\"nov-primary clear\">豆瓣读书</div>\n        <div class=\"nov-sec\">\n            <div class=\"novel\"><a href=\"novelInit\">小说</a></div>\n            <div class=\"essay\"><a href=\"essayInit\">散文</a></div>\n            <div class=\"poetry\"><a href=\"proseInit\">随笔</a></div>\n            <div class=\"work\"><a href=\"literatureInit\">文学</a></div>\n        </div>\n    </div>\n      </div>\n    </Layout>\n  );\n};\n\n//getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\n//当刷新页面(初次载入页面)，该方法会在服务器执行\n//当通过<Link>跳转路由的时候，该方法会在客户端执行\nIndexPage.getInitialProps = async () => {\n  const res = await fetch(\"https://api.tvmaze.com/search/shows?q=marvel\");\n  const data = await res.json();\n  //这边返回的数据会被挂载到组件的props中\n  return { show: data };\n};\n\nexport default withRouter(IndexPage);\n"]},"metadata":{},"sourceType":"module"}