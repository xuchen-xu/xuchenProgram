{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\u6BD5\\u4E1A\\u8BBE\\u8BA1\\\\\\u5B9E\\u8DF5\\u8D44\\u6599\\\\20210201\\\\20210201\\\\code\\\\next-ts\\u6A21\\u677F\\\\my-app\\\\pages\\\\novel.tsx\";\nvar __jsx = React.createElement;\n// import Link from 'next/link'\nimport Layout from \"../components/Layout\";\nimport { withRouter } from \"next/router\";\nimport React from \"react\";\nimport \"../static/css/font-awesome.css\";\nimport \"./css/novel.css\";\n\n// 声明的全局数据\nconst IndexPage = props => {\n  // console.log(props);\n  return __jsx(Layout, {\n    title: \"\\u5C0F\\u8BF4\\u754C\\u9762\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"continer clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"title clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"\\u8C46\\u74E3\\u8BFB\\u4E66\"), __jsx(\"form\", {\n    className: \"form\",\n    action: \"searchByName?type=1\",\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    className: \"lable\",\n    type: \"text\",\n    name: \"bookName\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u4E66\\u540D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    className: \"search\",\n    type: \"submit\",\n    value: \"\\u641C\\u7D22\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  })), __jsx(\"form\", {\n    className: \"form\",\n    action: \"searchByAuthor?type=1\",\n    method: \"post\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, __jsx(\"input\", {\n    className: \"lable\",\n    type: \"text\",\n    name: \"author\",\n    placeholder: \"\\u8BF7\\u8F93\\u5165\\u4F5C\\u8005\\u540D\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }), __jsx(\"input\", {\n    className: \"search\",\n    type: \"submit\",\n    value: \"\\u641C\\u7D22\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  })))));\n}; //getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\n//当刷新页面(初次载入页面)，该方法会在服务器执行\n//当通过<Link>跳转路由的时候，该方法会在客户端执行\n// IndexPage.getInitialProps = async () => {\n//   const res = await fetch(\"http://localhost:3001/api/users\");\n//   const data = await res.json();\n//   //这边返回的数据会被挂载到组件的props中\n//   return { show: data };\n// };\n\n\nexport default withRouter(IndexPage);","map":{"version":3,"sources":["D:/react毕业设计/实践资料/20210201/20210201/code/next-ts模板/my-app/pages/novel.tsx"],"names":["Layout","withRouter","React","IndexPage","props"],"mappings":";;AAAA;AACA,OAAOA,MAAP;AACA,SAASC,UAAT,QAA2B,aAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA;AACA;;AAGA;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAgB;AAChC;AACA,SACE,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAC,0BAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAE,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,MAAM,EAAC,qBAA9B;AAAoD,IAAA,MAAM,EAAC,MAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,IAAI,EAAC,MAA9B;AAAqC,IAAA,IAAI,EAAC,UAA1C;AAAqD,IAAA,WAAW,EAAC,gCAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAwC,IAAA,KAAK,EAAC,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAFF,EAME;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,MAAM,EAAC,uBAA9B;AAAsD,IAAA,MAAM,EAAC,MAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAyB,IAAA,IAAI,EAAC,MAA9B;AAAqC,IAAA,IAAI,EAAC,QAA1C;AAAmD,IAAA,WAAW,EAAC,sCAA/D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAO,IAAA,SAAS,EAAC,QAAjB;AAA0B,IAAA,IAAI,EAAC,QAA/B;AAAwC,IAAA,KAAK,EAAC,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CANF,CADA,CADF,CADF;AAkBD,CApBD,C,CAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeH,UAAU,CAACE,SAAD,CAAzB","sourcesContent":["// import Link from 'next/link'\r\nimport Layout from \"../components/Layout\";\r\nimport { withRouter } from \"next/router\";\r\nimport React from \"react\";\r\nimport \"@/static/css/font-awesome.css\";\r\nimport \"./css/novel.css\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport Fromdemo from \"./components/from\";\r\n// 声明的全局数据\r\n\r\nconst IndexPage = (props: any) => {\r\n  // console.log(props);\r\n  return (\r\n    <Layout title=\"小说界面\">\r\n      <div className=\"continer clear\">\r\n      <div className=\"title clear\">\r\n        <div className =\"text\">豆瓣读书</div>\r\n        <form className=\"form\" action=\"searchByName?type=1\" method=\"post\">\r\n            <input className=\"lable\" type=\"text\" name=\"bookName\" placeholder=\"请输入书名\" />\r\n            <input className=\"search\" type=\"submit\" value=\"搜索\" />\r\n        </form>\r\n        <form className=\"form\" action=\"searchByAuthor?type=1\" method=\"post\">\r\n            <input className=\"lable\" type=\"text\" name=\"author\" placeholder=\"请输入作者名\" />\r\n            <input className=\"search\" type=\"submit\" value=\"搜索\" />\r\n        </form>\r\n    </div>\r\n\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n//getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\r\n//当刷新页面(初次载入页面)，该方法会在服务器执行\r\n//当通过<Link>跳转路由的时候，该方法会在客户端执行\r\n// IndexPage.getInitialProps = async () => {\r\n//   const res = await fetch(\"http://localhost:3001/api/users\");\r\n//   const data = await res.json();\r\n//   //这边返回的数据会被挂载到组件的props中\r\n//   return { show: data };\r\n// };\r\n\r\nexport default withRouter(IndexPage);\r\n"]},"metadata":{},"sourceType":"module"}