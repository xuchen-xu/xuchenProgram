{"ast":null,"code":"var _jsxFileName = \"D:\\\\react\\u6BD5\\u4E1A\\u8BBE\\u8BA1\\\\\\u5B9E\\u8DF5\\u8D44\\u6599\\\\20210201\\\\20210201\\\\code\\\\next-ts\\u6A21\\u677F\\\\my-app\\\\pages\\\\novel\\\\index.tsx\";\nvar __jsx = React.createElement;\nimport Layout from \"../../components/Layout\";\nimport { withRouter } from \"next/router\";\nimport React, { useState, useRef } from \"react\";\nimport \"../../static/css/font-awesome.css\";\nimport \"../css/novel.css\";\nimport fetch from \"isomorphic-unfetch\";\n// 声明的全局数据\nlet imgnumber = 0;\nlet test = {\n  key: \"111\"\n};\n\nconst IndexPage = props => {\n  //引用页面元素\n  const inputRef = useRef(null);\n  let {\n    0: user,\n    1: setuser\n  } = useState(\"\");\n\n  const handleSubmit = () => {\n    console.log(inputRef.current && inputRef.current.value);\n\n    if (inputRef.current) {// setuser(inputRef.current.value)\n    }\n  };\n\n  return __jsx(Layout, {\n    title: \"\\u5206\\u7C7B\\uFF1A\\u5C0F\\u8BF4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: \"continer clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    className: \"title clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"f\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }, \"\\u8C46\\u74E3\\u8BFB\\u4E66\")), __jsx(\"div\", {\n    className: \"classification\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, __jsx(\"div\", {\n    className: \"two clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, __jsx(\"div\", {\n    className: \"special clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"\\u5C0F\\u8BF4\"), __jsx(\"div\", {\n    className: \"box clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, \"\\u6563\\u6587\"), __jsx(\"div\", {\n    className: \"box clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"\\u968F\\u7B14\"), __jsx(\"div\", {\n    className: \"box clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"\\u6587\\u5B66\"))), __jsx(\"div\", {\n    className: \"photo clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, __jsx(\"img\", {\n    src: \"../../static/images/image/novelfirst.jpg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), __jsx(\"div\", {\n    className: \"books clear\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, props.show.map(item => {\n    imgnumber++;\n\n    if (imgnumber < 22) {\n      return __jsx(\"div\", {\n        key: item.bookId,\n        className: \"book clear\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }\n      }, __jsx(\"div\", {\n        style: {\n          alignContent: \"center\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 19\n        }\n      }, __jsx(\"img\", {\n        src: `../static/images/image/${item.imgPath}`,\n        width: \"115\",\n        height: \"172\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }\n      })), __jsx(\"div\", {\n        className: \"text1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 19\n        }\n      }, item.bookName), __jsx(\"div\", {\n        className: \"text2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 19\n        }\n      }, \"\\u4F5C\\u8005:\", item.author));\n    }\n  }))));\n}; // getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\n// 当刷新页面(初次载入页面)，该方法会在服务器执行\n// 当通过<Link>跳转路由的时候，该方法会在客户端执行\n\n\nIndexPage.getInitialProps = async () => {\n  const res = await fetch(\"http://localhost:3001/novel\");\n  const data = await res.json(); //这边返回的数据会被挂载到组件的props中\n\n  return {\n    show: data\n  };\n};\n\nexport default withRouter(IndexPage);","map":{"version":3,"sources":["D:/react毕业设计/实践资料/20210201/20210201/code/next-ts模板/my-app/pages/novel/index.tsx"],"names":["Layout","withRouter","React","useState","useRef","fetch","imgnumber","test","key","IndexPage","props","inputRef","user","setuser","handleSubmit","console","log","current","value","show","map","item","bookId","alignContent","imgPath","bookName","author","getInitialProps","res","data","json"],"mappings":"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","sourcesContent":["import Link from \"next/link\";\r\nimport Layout from \"../../components/Layout\";\r\nimport { withRouter } from \"next/router\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport \"@/static/css/font-awesome.css\";\r\nimport \"../css/novel.css\";\r\nimport fetch from \"isomorphic-unfetch\";\r\nimport Chuanzhi from \"../components/chuanzhi\";\r\n\r\n// 声明的全局数据\r\nlet imgnumber = 0;\r\nlet test = {\r\n  key: \"111\",\r\n};\r\nconst IndexPage = (props: any) => {\r\n  //引用页面元素\r\n  const inputRef = useRef<HTMLInputElement>(null);\r\n  let [user, setuser] = useState(\"\");\r\n  const handleSubmit = () => {\r\n    console.log(inputRef.current && inputRef.current.value);\r\n    if (inputRef.current) {\r\n      // setuser(inputRef.current.value)\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Layout title=\"分类：小说\">\r\n      <div className=\"continer clear\">\r\n        <div className=\"title clear\">\r\n          <div className=\"f\">豆瓣读书</div>\r\n        </div>\r\n        {/* --------------------------------------------------------------------- */}\r\n        <div className=\"classification\">\r\n          <div className=\"two clear\">\r\n            <div className=\"special clear\">小说</div>\r\n            <div className=\"box clear\">散文</div>\r\n            <div className=\"box clear\">随笔</div>\r\n            <div className=\"box clear\">文学</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"photo clear\">\r\n          <img src=\"../../static/images/image/novelfirst.jpg\"/>\r\n        </div>\r\n        <div className=\"books clear\">\r\n          {props.show.map((item: any) => {\r\n            imgnumber++;\r\n            if (imgnumber < 22) {\r\n              return (\r\n                <div key={item.bookId} className=\"book clear\">\r\n                  <div style={{ alignContent: \"center\" }}>\r\n                    <img\r\n                      src={`../static/images/image/${item.imgPath}`}\r\n                      width=\"115\"\r\n                      height=\"172\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"text1\">{item.bookName}</div>\r\n                  <div className=\"text2\">作者:{item.author}</div>\r\n                </div>\r\n              );\r\n            }\r\n          })}\r\n        </div>\r\n        {/* <Chuanzhi {...test}/> */}\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\n// getInitialProps 方法既可以在服务器运行，又可以在客户端运行(组件创建之前执行的)\r\n// 当刷新页面(初次载入页面)，该方法会在服务器执行\r\n// 当通过<Link>跳转路由的时候，该方法会在客户端执行\r\nIndexPage.getInitialProps = async () => {\r\n  const res = await fetch(\"http://localhost:3001/novel\");\r\n  const data = await res.json();\r\n  //这边返回的数据会被挂载到组件的props中\r\n  return { show: data };\r\n};\r\n\r\nexport default withRouter(IndexPage);\r\n"]},"metadata":{},"sourceType":"module"}